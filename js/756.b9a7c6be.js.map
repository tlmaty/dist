{"version":3,"file":"js/756.b9a7c6be.js","mappings":"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","sources":["webpack://test-vue/./src/views/AdminView.vue","webpack://test-vue/./src/views/AdminView.vue?e347"],"sourcesContent":["<script>\r\nimport HelloBarre from \"../components/HelloBarre.vue\";\r\nimport json from '../assets/label.json'\r\nexport default {\r\n    name: 'AdminView',\r\n    components: { \r\n        HelloBarre \r\n    },\r\n    data() {\r\n        return {\r\n            // barres: [\r\n            //     { \r\n            //         id: 0, \r\n            //         title: 'Soldes',\r\n            //         content: '50% de rabais le premier jour des soldes avec le code SOLDES50 !', \r\n            //         background: '#00395d',\r\n            //         contentLink: 'Cliquez ici !',\r\n            //         color: 'white',\r\n            //         dateCount: '18 january 2023 23:59',\r\n            //     },\r\n            //     { \r\n            //         id: 1, \r\n            //         title: 'Livraison gratuite',\r\n            //         content: 'Profitez de la livraison gratuite jusqu\\'au 31 janvier', \r\n            //         background: '#FF352F',\r\n            //         contentLink: 'J\\'en profite !',\r\n            //         color: 'white',\r\n            //         dateCount: '1 february 2023 23:59',\r\n            //     },\r\n            //     { \r\n            //         id: 2, \r\n            //         title: 'Or gratuit',\r\n            //         content: 'L\\'or est gratuit tout le mois de janvier !', \r\n            //         background: '#ad8827',\r\n            //         contentLink: 'Je fonce !',\r\n            //         color: 'white',\r\n            //         dateCount: '10 june 2023 23:59',\r\n            //     }\r\n            // ],\r\n            barres : json\r\n        }\r\n    },\r\n    methods: {\r\n        editbarre(el) {\r\n            var barreId = el.id;\r\n\r\n            var newContent = prompt('Nouveau contenu : ', this.barres[barreId].content);\r\n            this.barres[barreId].content = newContent;\r\n\r\n            var newTitle = prompt('Nouveau titre : ', this.barres[barreId].title);\r\n            this.barres[barreId].title = newTitle;\r\n\r\n            var newBackground = prompt('Nouveau fond : ', this.barres[barreId].background);\r\n            this.barres[barreId].background = newBackground;\r\n\r\n            var newLink = prompt('Nouveau lien : ', this.barres[barreId].contentLink);\r\n            this.barres[barreId].contentLink = newLink;\r\n\r\n            var newColor = prompt('Nouvelle couleur de texte : ', this.barres[barreId].color);\r\n            this.barres[barreId].color = newColor;\r\n\r\n            var newDate = prompt('Nouvelle date : ', this.barres[barreId].dateCount);\r\n            this.barres[barreId].dateCount = newDate;\r\n\r\n            this.datetimer(barreId);\r\n            for (let i = 0; i < this.barres.length; i++) {\r\n                this.barres[i].id = i\r\n            }\r\n            return;\r\n        },\r\n        dltbarre(el) {\r\n            this.barres.splice(this.barres.indexOf(el), 1)\r\n            for (let i = 0; i < this.barres.length; i++) {\r\n                this.barres[i].id = i;\r\n                this.datetimer(i)\r\n            }\r\n        },\r\n        addbarre() {\r\n            for (let i = 0; i < this.barres.length; i++) {\r\n                this.barres[i].id = i;\r\n            }\r\n            var newBarre = {\r\n                id: this.barres.length,\r\n                title: prompt('Titre : '),\r\n                content: prompt('Contenu : '),\r\n                background: prompt('Couleur de fond : '),\r\n                contentLink: prompt('Lien : '),\r\n                color: prompt('Couleur du texte : '),\r\n                dateCount: prompt('Date : '),\r\n            }\r\n            this.barres.push(newBarre)\r\n            this.datetimer(this.barres.length-1)\r\n        },\r\n        datetimer(nb) {\r\n            var countDownDate = new Date(this.barres[nb].dateCount).getTime();\r\n            if (!isNaN(countDownDate)) {\r\n                var x = setInterval(function() {\r\n                    var now = new Date().getTime();\r\n                    var distance = countDownDate - now;\r\n\r\n                    var barres = document.querySelectorAll('.barres .demo')\r\n\r\n                    var days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n                    days == '0' ? days = '' : days = days + 'j '\r\n                    var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)) + 'h ';\r\n                    var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60)) + 'm ';\r\n                    var seconds = Math.floor((distance % (1000 * 60)) / 1000) + 's';\r\n\r\n                    barres[nb].innerHTML = days + hours + minutes + seconds;\r\n\r\n                    if (distance < 0) {\r\n                        barres[nb].innerHTML = '';\r\n                        clearInterval(x)\r\n                    }\r\n                }, 1000);\r\n            }\r\n        },\r\n        exportbarre() {\r\n            var myJsonString = JSON.stringify(this.barres, null, 2);\r\n\r\n            // POST avec API fetch renvoi une 404\r\n\r\n            // const requestOptions = {\r\n            //     method: \"POST\",\r\n            //     headers: new Headers({\r\n            //         'Content-Type': 'application/json',\r\n            //         'Accept': 'application/json',\r\n            //     }),\r\n            //     body: myJsonString\r\n            // };\r\n            // fetch(\"../assets/label.json\", requestOptions)\r\n            //     .then(response => response.json())\r\n            //     .then(data => (this.postId = data.id));\r\n\r\n            // Téléchargement d'un fichier label.json \r\n\r\n            const blob = new Blob([myJsonString], {type:'application/json'})\r\n            const link = document.createElement('a')\r\n            link.href = URL.createObjectURL(blob)\r\n            link.download = 'label'\r\n            link.click()\r\n            URL.revokeObjectURL(link.href)\r\n        }\r\n    },\r\n    mounted() {\r\n        var barres = document.querySelectorAll('.barres .demo')\r\n        let i = -1;\r\n        barres.forEach(() => {\r\n            i++\r\n            this.datetimer(i)\r\n        })\r\n    },\r\n}\r\n\r\n</script>\r\n\r\n<template>\r\n    <div class=\"adminpanel\">\r\n      <img alt=\"Vue logo\" src=\"../assets/logo.png\">\r\n      <ul class=\"barres\">\r\n        <li class=\"containerbarre\"\r\n            v-for=\"barre in barres\"\r\n            :key=\"barre.id\"\r\n        >\r\n            <p>{{ barre.title }}</p>\r\n            <HelloBarre\r\n                :content=\"barre.content\"\r\n                :background=\"barre.background\"\r\n                :contentLink=\"barre.contentLink\"\r\n                :color=\"barre.color\"\r\n                :dateCount=\"barre.dateCount\"\r\n                :data-date=\"barre.dateCount\"\r\n            />\r\n            <button v-on:click=\"editbarre(barre)\">Modifier</button>\r\n            <button v-on:click=\"dltbarre(barre)\">Supprimer</button>\r\n        </li>\r\n      </ul>\r\n      <button v-on:click=\"addbarre()\">Ajouter une barre</button>\r\n      <button v-on:click=\"exportbarre()\">Exporter en JSON</button>\r\n    </div>\r\n</template>\r\n\r\n<style lang=\"scss\">\r\n    .adminpanel {\r\n        .barres {\r\n            padding: 0;\r\n\r\n            .containerbarre {\r\n                display: flex;\r\n                position: relative;\r\n                margin: 20px 0;\r\n\r\n                 & > p {\r\n                    position: absolute;\r\n                    top: -40px;\r\n                    color: black;\r\n                }\r\n                \r\n                .hellobarre {\r\n                    position: relative;\r\n                    width: calc(100% - 65px);\r\n\r\n                    span {\r\n                        position: absolute;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n</style>","import { render } from \"./AdminView.vue?vue&type=template&id=5e25ac5d\"\nimport script from \"./AdminView.vue?vue&type=script&lang=js\"\nexport * from \"./AdminView.vue?vue&type=script&lang=js\"\n\nimport \"./AdminView.vue?vue&type=style&index=0&id=5e25ac5d&lang=scss\"\n\nimport exportComponent from \"C:\\\\Users\\\\dsi_tl\\\\Documents\\\\test-vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","alt","src","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","$data","barre","key","id","title","_createVNode","_component_HelloBarre","content","background","contentLink","color","dateCount","onClick","$options","name","components","HelloBarre","data","barres","json","methods","editbarre","el","barreId","newContent","prompt","this","newTitle","newBackground","newLink","newColor","newDate","datetimer","i","length","dltbarre","splice","indexOf","addbarre","newBarre","push","nb","countDownDate","Date","getTime","isNaN","x","setInterval","now","distance","document","querySelectorAll","days","Math","floor","hours","minutes","seconds","innerHTML","clearInterval","exportbarre","myJsonString","JSON","stringify","blob","Blob","type","link","createElement","href","URL","createObjectURL","download","click","revokeObjectURL","mounted","forEach","__exports__","render"],"sourceRoot":""}